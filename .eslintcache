[{"/Users/shrey/Desktop/labtest02/src/index.js":"1","/Users/shrey/Desktop/labtest02/src/App.js":"2","/Users/shrey/Desktop/labtest02/src/components/Wrapper.js":"3","/Users/shrey/Desktop/labtest02/src/components/Main.js":"4","/Users/shrey/Desktop/labtest02/src/components/Header.js":"5","/Users/shrey/Desktop/labtest02/src/components/Content.js":"6","/Users/shrey/Desktop/labtest02/src/api/FetchWeather.js":"7"},{"size":273,"mtime":1638313969230,"results":"8","hashOfConfig":"9"},{"size":211,"mtime":1638313969229,"results":"10","hashOfConfig":"9"},{"size":180,"mtime":1638313969230,"results":"11","hashOfConfig":"9"},{"size":2089,"mtime":1638313969230,"results":"12","hashOfConfig":"9"},{"size":165,"mtime":1638313969230,"results":"13","hashOfConfig":"9"},{"size":138,"mtime":1638313969229,"results":"14","hashOfConfig":"9"},{"size":361,"mtime":1638316583000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1gv08sy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shrey/Desktop/labtest02/src/index.js",[],["32","33"],"/Users/shrey/Desktop/labtest02/src/App.js",[],"/Users/shrey/Desktop/labtest02/src/components/Wrapper.js",[],"/Users/shrey/Desktop/labtest02/src/components/Main.js",["34"],"import React, { Component } from \"react\"\nimport Header from \"./Header\"\nimport Content from \"./Content\"\nimport FetchWeather from \"../api/FetchWeather\"\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: {},\n            date: new Date(),\n            loading: true\n        }\n    }\n\n    async componentDidMount() {\n        await FetchWeather.fetchWeather()\n            .then((res) => {\n                this.setState({ data: res.data, loading: false })\n            })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <h1>Loading...</h1>\n                </div>\n            )\n        }\n        else {\n\n            let temp = Math.round(this.state.data.main.temp);\n            let feelsLike = Math.round(this.state.data.main.feels_like)\n            let humidity = this.state.data.main.humidity\n            let wind = this.state.data.wind.speed;\n            let description = this.state.data.weather[0].description\n            let icon = `http://openweathermap.org/img/wn/${this.state.data.weather[0].icon}@2x.png`;\n\n            return (\n                <div className=\"main\">\n                    <Header />\n                    <Content>\n                        <div className=\"container\">\n                            <h1 className=\"toronto\">{this.state.data.name}</h1>\n                            <text className=\"date\">{this.state.date.toDateString()}</text>\n                            <img className=\"icon\" src={icon} />\n                            <text className=\"description\">{description}</text>\n                            <text className=\"temp\">{temp}&deg;C</text>\n                            <text className=\"details\">Feels like {feelsLike}</text>\n                            <text className=\"details\">Humidity {humidity} %</text>\n                            <text className=\"details\">Wind {wind} km/h</text>\n                        </div>\n                    </Content>\n                </div>\n            )\n        }\n\n    }\n}\n\n\nexport default Main","/Users/shrey/Desktop/labtest02/src/components/Header.js",[],"/Users/shrey/Desktop/labtest02/src/components/Content.js",[],"/Users/shrey/Desktop/labtest02/src/api/FetchWeather.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":49,"column":29,"nodeType":"41","endLine":49,"endColumn":64},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]